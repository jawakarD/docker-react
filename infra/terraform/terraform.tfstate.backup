{
  "version": 4,
  "terraform_version": "0.12.19",
  "serial": 61,
  "lineage": "35192d24-1520-d69b-40f7-f94941cb01fa",
  "outputs": {
    "DOCKUP_OUTPUT_DB_HOST": {
      "value": "tf-react-rds-postgres.cprdpdxq3m8d.us-east-1.rds.amazonaws.com:5432",
      "type": "string"
    },
    "DOCKUP_OUTPUT_EKS_ENDPOINT": {
      "value": "https://348939D1307D3B404636B9C175411842.gr7.us-east-1.eks.amazonaws.com",
      "type": "string"
    },
    "DOCKUP_OUTPUT_KUBECONFIG": {
      "value": "apiVersion: v1\npreferences: {}\nkind: Config\n\nclusters:\n- cluster:\n    server: https://348939D1307D3B404636B9C175411842.gr7.us-east-1.eks.amazonaws.com\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJd01ERXlPVEE0TURNME9Gb1hEVE13TURFeU5qQTRNRE0wT0Zvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTVZoCjFwdXFraFBCUTBEa3R3ejNxeW9tb2hOVDl2cjlTQWxUajVKRE5EMThpV0lDOTZPcTQyOVhXZG9OVnBidzJwcXYKMzZjMlg0Yms5VENJcDkyS2d4WG55S2hoSmxNdEFLeGQ3d1VVMHRiNnlmOGN1NldTUlZSUEYwTEdVQVhxWUJlTwpsTnAvUnZFeFJUUGdpdXU2R3dvemtwakNVOTFvV2NIak1rMzc1OHlhWElFTjFnT2s3eTV6TjFqcW5UU2RJREFVCjFsNzdONk1qS29XTEJNRGVRTnRwUmJ2OWVRcisvVWJETGpCeVU0QVQ0cHZYYy9nTUJCN2tPcmd1ZENJUXlRZVIKSWRFUkxPNy9xVTVJRDFlNTUrVHpTZk1zQWpEV2NVaUFVUG41NjBvOXMrRnlBSUZpSlovV1A3R1dDOUUxVVFuNwo1Z0JTbHNJZE5MS2w3T3ltbm9VQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFDcjlXeXZ4T0lHMDZyejMzUFVKUHF3d0NTZmkKWk4wVU9NVFdQSzEvUm9MRkpveWZxZXNkaHFqL09MRTY4Rk92bzRhYjAvb1VCdHYzVHJvVUM3OWgveWxLblNMTQpFOTIxSm0zNXNwVndXSVlSbERXTXVvNXZ4R0k4ZXk3OTRtZFo1ckhZOTlDRG1OcXhicjRVUG9INHNYK3J4WlRlCnJZMzY5OWZ3RzBHaThaV05Uc2FJRXdMdjgyekJRN2w0Vlp0RGo4V2E2NUg0ZVpHRWpnbkt6U0VpSzBTOWVjUG4KWG9WU1FFUm01aHZGN0RCM3I0bzNqNnhmY0ErZXozQU8wd3BWMm43ejZvRkowZThkQUk1ejBPUkhrUkhodVFuZgpZcFlXUWt4a2taM052am9TWnU5MEJLRU5VUmMzTVlBTnIreFBOejl1UGt3THhva2tnNEpRNUthbzBaMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\n  name: eks_tf-react\n\ncontexts:\n- context:\n    cluster: eks_tf-react\n    user: eks_tf-react\n  name: eks_tf-react\n\ncurrent-context: eks_tf-react\n\nusers:\n- name: eks_tf-react\n  user:\n    exec:\n      apiVersion: client.authentication.k8s.io/v1alpha1\n      command: aws-iam-authenticator\n      args:\n        - \"token\"\n        - \"-i\"\n        - \"tf-react\"\n\n\n",
      "type": "string"
    }
  },
  "resources": [
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_ami",
      "name": "eks_worker",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architecture": "x86_64",
            "block_device_mappings": [
              {
                "device_name": "/dev/xvda",
                "ebs": {
                  "delete_on_termination": "true",
                  "encrypted": "false",
                  "iops": "0",
                  "snapshot_id": "snap-07927c47c37685f1d",
                  "volume_size": "20",
                  "volume_type": "gp2"
                },
                "no_device": "",
                "virtual_name": ""
              }
            ],
            "creation_date": "2019-12-13T08:27:25.000Z",
            "description": "EKS Kubernetes Worker AMI with AmazonLinux2 image, (k8s: 1.14.8, docker:18.09.9ce-2.amzn2)",
            "executable_users": null,
            "filter": [
              {
                "name": "name",
                "values": [
                  "amazon-eks-node-1.14-v*"
                ]
              }
            ],
            "hypervisor": "xen",
            "id": "ami-087a82f6b78a07557",
            "image_id": "ami-087a82f6b78a07557",
            "image_location": "amazon/amazon-eks-node-1.14-v20191213",
            "image_owner_alias": "amazon",
            "image_type": "machine",
            "kernel_id": null,
            "most_recent": true,
            "name": "amazon-eks-node-1.14-v20191213",
            "name_regex": null,
            "owner_id": "602401143452",
            "owners": [
              "602401143452"
            ],
            "platform": null,
            "product_codes": [],
            "public": true,
            "ramdisk_id": null,
            "root_device_name": "/dev/xvda",
            "root_device_type": "ebs",
            "root_snapshot_id": "snap-07927c47c37685f1d",
            "sriov_net_support": "simple",
            "state": "available",
            "state_reason": {
              "code": "UNSET",
              "message": "UNSET"
            },
            "tags": {},
            "virtualization_type": "hvm"
          }
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_ami",
      "name": "eks_worker_windows",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architecture": "x86_64",
            "block_device_mappings": [
              {
                "device_name": "/dev/sda1",
                "ebs": {
                  "delete_on_termination": "true",
                  "encrypted": "false",
                  "iops": "0",
                  "snapshot_id": "snap-0f6b9e033ba4a1337",
                  "volume_size": "50",
                  "volume_type": "gp2"
                },
                "no_device": "",
                "virtual_name": ""
              },
              {
                "device_name": "xvdca",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral0"
              },
              {
                "device_name": "xvdcb",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral1"
              },
              {
                "device_name": "xvdcc",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral2"
              },
              {
                "device_name": "xvdcd",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral3"
              },
              {
                "device_name": "xvdce",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral4"
              },
              {
                "device_name": "xvdcf",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral5"
              },
              {
                "device_name": "xvdcg",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral6"
              },
              {
                "device_name": "xvdch",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral7"
              },
              {
                "device_name": "xvdci",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral8"
              },
              {
                "device_name": "xvdcj",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral9"
              },
              {
                "device_name": "xvdck",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral10"
              },
              {
                "device_name": "xvdcl",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral11"
              },
              {
                "device_name": "xvdcm",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral12"
              },
              {
                "device_name": "xvdcn",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral13"
              },
              {
                "device_name": "xvdco",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral14"
              },
              {
                "device_name": "xvdcp",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral15"
              },
              {
                "device_name": "xvdcq",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral16"
              },
              {
                "device_name": "xvdcr",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral17"
              },
              {
                "device_name": "xvdcs",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral18"
              },
              {
                "device_name": "xvdct",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral19"
              },
              {
                "device_name": "xvdcu",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral20"
              },
              {
                "device_name": "xvdcv",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral21"
              },
              {
                "device_name": "xvdcw",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral22"
              },
              {
                "device_name": "xvdcx",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral23"
              },
              {
                "device_name": "xvdcy",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral24"
              },
              {
                "device_name": "xvdcz",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral25"
              }
            ],
            "creation_date": "2020-01-15T07:43:41.000Z",
            "description": "Microsoft Windows Server 2019 Core optimized for EKS and provided by Amazon",
            "executable_users": null,
            "filter": [
              {
                "name": "name",
                "values": [
                  "Windows_Server-2019-English-Core-EKS_Optimized-1.14-*"
                ]
              },
              {
                "name": "platform",
                "values": [
                  "windows"
                ]
              }
            ],
            "hypervisor": "xen",
            "id": "ami-01c009f7eebfe59d5",
            "image_id": "ami-01c009f7eebfe59d5",
            "image_location": "amazon/Windows_Server-2019-English-Core-EKS_Optimized-1.14-2020.01.15",
            "image_owner_alias": "amazon",
            "image_type": "machine",
            "kernel_id": null,
            "most_recent": true,
            "name": "Windows_Server-2019-English-Core-EKS_Optimized-1.14-2020.01.15",
            "name_regex": null,
            "owner_id": "801119661308",
            "owners": [
              "801119661308"
            ],
            "platform": "windows",
            "product_codes": [],
            "public": true,
            "ramdisk_id": null,
            "root_device_name": "/dev/sda1",
            "root_device_type": "ebs",
            "root_snapshot_id": "snap-0f6b9e033ba4a1337",
            "sriov_net_support": "simple",
            "state": "available",
            "state_reason": {
              "code": "UNSET",
              "message": "UNSET"
            },
            "tags": {},
            "virtualization_type": "hvm"
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_availability_zones",
      "name": "available",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "blacklisted_names": null,
            "blacklisted_zone_ids": null,
            "id": "2020-01-29 07:55:36.522095 +0000 UTC",
            "names": [
              "us-east-1a",
              "us-east-1b",
              "us-east-1c",
              "us-east-1d",
              "us-east-1e",
              "us-east-1f"
            ],
            "state": null,
            "zone_ids": [
              "use1-az4",
              "use1-az6",
              "use1-az1",
              "use1-az2",
              "use1-az3",
              "use1-az5"
            ]
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "053732050045",
            "arn": "arn:aws:iam::053732050045:user/jawakar",
            "id": "2020-01-29 07:55:38.101361 +0000 UTC",
            "user_id": "AIDAQZAVOAR64EDDOEI2W"
          }
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "053732050045",
            "arn": "arn:aws:iam::053732050045:user/jawakar",
            "id": "2020-01-29 07:55:38.079686 +0000 UTC",
            "user_id": "AIDAQZAVOAR64EDDOEI2W"
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_eks_cluster_auth",
      "name": "dockup",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "2020-01-29 07:55:36.527007 +0000 UTC",
            "name": "tf-react",
            "token": "k8s-aws-v1.aHR0cHM6Ly9zdHMuYW1hem9uYXdzLmNvbS8_QWN0aW9uPUdldENhbGxlcklkZW50aXR5JlZlcnNpb249MjAxMS0wNi0xNSZYLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFRWkFWT0FSNjJUVUIzTldNJTJGMjAyMDAxMjklMkZ1cy1lYXN0LTElMkZzdHMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDIwMDEyOVQwNzU1MzZaJlgtQW16LUV4cGlyZXM9MCZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QlM0J4LWs4cy1hd3MtaWQmWC1BbXotU2lnbmF0dXJlPTljOWRlZTVjNWIwYTE4NDNiZDg0OTRjNDAxZjJjMTk0OGFjNGJmOTdkYjg0YTlmYzA5NGZmMDBmYjcwOTg0Y2I"
          }
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_iam_instance_profile",
      "name": "custom_worker_group_iam_instance_profile",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_iam_instance_profile",
      "name": "custom_worker_group_launch_template_iam_instance_profile",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "cluster_assume_role_policy",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "2764486067",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSClusterAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "eks.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSClusterAssumeRole"
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "module": "module.db.module.db_instance",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "enhanced_monitoring",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "1813475199",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"monitoring.rds.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "monitoring.rds.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "worker_autoscaling",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "1856406734",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"eksWorkerAutoscalingAll\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeLaunchTemplateVersions\",\n        \"autoscaling:DescribeTags\",\n        \"autoscaling:DescribeLaunchConfigurations\",\n        \"autoscaling:DescribeAutoScalingInstances\",\n        \"autoscaling:DescribeAutoScalingGroups\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"eksWorkerAutoscalingOwn\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"autoscaling:UpdateAutoScalingGroup\",\n        \"autoscaling:TerminateInstanceInAutoScalingGroup\",\n        \"autoscaling:SetDesiredCapacity\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"autoscaling:ResourceTag/k8s.io/cluster-autoscaler/enabled\": \"true\",\n          \"autoscaling:ResourceTag/kubernetes.io/cluster/tf-react\": \"owned\"\n        }\n      }\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "autoscaling:DescribeAutoScalingGroups",
                  "autoscaling:DescribeAutoScalingInstances",
                  "autoscaling:DescribeLaunchConfigurations",
                  "autoscaling:DescribeTags",
                  "ec2:DescribeLaunchTemplateVersions"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": "eksWorkerAutoscalingAll"
              },
              {
                "actions": [
                  "autoscaling:SetDesiredCapacity",
                  "autoscaling:TerminateInstanceInAutoScalingGroup",
                  "autoscaling:UpdateAutoScalingGroup"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "owned"
                    ],
                    "variable": "autoscaling:ResourceTag/kubernetes.io/cluster/tf-react"
                  },
                  {
                    "test": "StringEquals",
                    "values": [
                      "true"
                    ],
                    "variable": "autoscaling:ResourceTag/k8s.io/cluster-autoscaler/enabled"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": "eksWorkerAutoscalingOwn"
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "workers_assume_role_policy",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "3778018924",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSWorkerAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "ec2.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSWorkerAssumeRole"
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_iam_role",
      "name": "custom_cluster_iam_role",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "current": null,
            "description": "US East (N. Virginia)",
            "endpoint": "ec2.us-east-1.amazonaws.com",
            "id": "us-east-1",
            "name": "us-east-1"
          }
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "apigw",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "appmesh_envoy_management",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "appstream",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "athena",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "cloud_directory",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "cloudformation",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "cloudtrail",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "codebuild",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "codecommit",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "codepipeline",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "config",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "dynamodb",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "ec2",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "ec2messages",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "ecr_api",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "ecr_dkr",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "ecs",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "ecs_agent",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "ecs_telemetry",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "efs",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "elasticloadbalancing",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "events",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "git_codecommit",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "glue",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "kinesis_firehose",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "kinesis_streams",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "kms",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "logs",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "monitoring",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "rekognition",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "s3",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "sagemaker_api",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "sagemaker_notebook",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "sagemaker_runtime",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "secretsmanager",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "servicecatalog",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "sns",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "sqs",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "ssm",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "ssmmessages",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "storagegateway",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "sts",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "transfer",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "transferserver",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "template_file",
      "name": "aws_authenticator_env_variables",
      "each": "list",
      "provider": "provider.template",
      "instances": []
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "template_file",
      "name": "config_map_aws_auth",
      "provider": "provider.template",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "933b7544d841381ad75eaf062d9673027a443e849f7681c08a41c6a742367328",
            "rendered": "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: aws-auth\n  namespace: kube-system\ndata:\n  mapRoles: |\n    - rolearn: arn:aws:iam::053732050045:role/tf-react2020012908055537650000000a\n      username: system:node:{{EC2PrivateDNSName}}\n      groups:\n        - system:bootstrappers\n        - system:nodes\n\n  \n  \n  \n",
            "template": "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: aws-auth\n  namespace: kube-system\ndata:\n  mapRoles: |\n${worker_role_arn}\n  %{if chomp(map_roles) != \"[]\" }\n    ${indent(4, map_roles)}\n  %{ endif }\n  %{if chomp(map_users) != \"[]\" }\n  mapUsers: |\n    ${indent(4, map_users)}\n  %{ endif }\n  %{if chomp(map_accounts) != \"[]\" }\n  mapAccounts: |\n    ${indent(4, map_accounts)}\n  %{ endif }\n",
            "vars": {
              "map_accounts": "[]\n",
              "map_roles": "[]\n",
              "map_users": "[]\n",
              "worker_role_arn": "    - rolearn: arn:aws:iam::053732050045:role/tf-react2020012908055537650000000a\n      username: system:node:{{EC2PrivateDNSName}}\n      groups:\n        - system:bootstrappers\n        - system:nodes\n"
            }
          }
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "template_file",
      "name": "kubeconfig",
      "provider": "provider.template",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "f5a4795d5ccde2f25cd8adb46ae2a5f73cc79777363aaef0d225591af5fe3197",
            "rendered": "apiVersion: v1\npreferences: {}\nkind: Config\n\nclusters:\n- cluster:\n    server: https://348939D1307D3B404636B9C175411842.gr7.us-east-1.eks.amazonaws.com\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJd01ERXlPVEE0TURNME9Gb1hEVE13TURFeU5qQTRNRE0wT0Zvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTVZoCjFwdXFraFBCUTBEa3R3ejNxeW9tb2hOVDl2cjlTQWxUajVKRE5EMThpV0lDOTZPcTQyOVhXZG9OVnBidzJwcXYKMzZjMlg0Yms5VENJcDkyS2d4WG55S2hoSmxNdEFLeGQ3d1VVMHRiNnlmOGN1NldTUlZSUEYwTEdVQVhxWUJlTwpsTnAvUnZFeFJUUGdpdXU2R3dvemtwakNVOTFvV2NIak1rMzc1OHlhWElFTjFnT2s3eTV6TjFqcW5UU2RJREFVCjFsNzdONk1qS29XTEJNRGVRTnRwUmJ2OWVRcisvVWJETGpCeVU0QVQ0cHZYYy9nTUJCN2tPcmd1ZENJUXlRZVIKSWRFUkxPNy9xVTVJRDFlNTUrVHpTZk1zQWpEV2NVaUFVUG41NjBvOXMrRnlBSUZpSlovV1A3R1dDOUUxVVFuNwo1Z0JTbHNJZE5MS2w3T3ltbm9VQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFDcjlXeXZ4T0lHMDZyejMzUFVKUHF3d0NTZmkKWk4wVU9NVFdQSzEvUm9MRkpveWZxZXNkaHFqL09MRTY4Rk92bzRhYjAvb1VCdHYzVHJvVUM3OWgveWxLblNMTQpFOTIxSm0zNXNwVndXSVlSbERXTXVvNXZ4R0k4ZXk3OTRtZFo1ckhZOTlDRG1OcXhicjRVUG9INHNYK3J4WlRlCnJZMzY5OWZ3RzBHaThaV05Uc2FJRXdMdjgyekJRN2w0Vlp0RGo4V2E2NUg0ZVpHRWpnbkt6U0VpSzBTOWVjUG4KWG9WU1FFUm01aHZGN0RCM3I0bzNqNnhmY0ErZXozQU8wd3BWMm43ejZvRkowZThkQUk1ejBPUkhrUkhodVFuZgpZcFlXUWt4a2taM052am9TWnU5MEJLRU5VUmMzTVlBTnIreFBOejl1UGt3THhva2tnNEpRNUthbzBaMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\n  name: eks_tf-react\n\ncontexts:\n- context:\n    cluster: eks_tf-react\n    user: eks_tf-react\n  name: eks_tf-react\n\ncurrent-context: eks_tf-react\n\nusers:\n- name: eks_tf-react\n  user:\n    exec:\n      apiVersion: client.authentication.k8s.io/v1alpha1\n      command: aws-iam-authenticator\n      args:\n        - \"token\"\n        - \"-i\"\n        - \"tf-react\"\n\n\n",
            "template": "apiVersion: v1\npreferences: {}\nkind: Config\n\nclusters:\n- cluster:\n    server: ${endpoint}\n    certificate-authority-data: ${cluster_auth_base64}\n  name: ${kubeconfig_name}\n\ncontexts:\n- context:\n    cluster: ${kubeconfig_name}\n    user: ${kubeconfig_name}\n  name: ${kubeconfig_name}\n\ncurrent-context: ${kubeconfig_name}\n\nusers:\n- name: ${kubeconfig_name}\n  user:\n    exec:\n      apiVersion: client.authentication.k8s.io/v1alpha1\n      command: ${aws_authenticator_command}\n      args:\n${aws_authenticator_command_args}\n${aws_authenticator_additional_args}\n${aws_authenticator_env_variables}\n",
            "vars": {
              "aws_authenticator_additional_args": "",
              "aws_authenticator_command": "aws-iam-authenticator",
              "aws_authenticator_command_args": "        - \"token\"\n        - \"-i\"\n        - \"tf-react\"",
              "aws_authenticator_env_variables": "",
              "cluster_auth_base64": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJd01ERXlPVEE0TURNME9Gb1hEVE13TURFeU5qQTRNRE0wT0Zvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTVZoCjFwdXFraFBCUTBEa3R3ejNxeW9tb2hOVDl2cjlTQWxUajVKRE5EMThpV0lDOTZPcTQyOVhXZG9OVnBidzJwcXYKMzZjMlg0Yms5VENJcDkyS2d4WG55S2hoSmxNdEFLeGQ3d1VVMHRiNnlmOGN1NldTUlZSUEYwTEdVQVhxWUJlTwpsTnAvUnZFeFJUUGdpdXU2R3dvemtwakNVOTFvV2NIak1rMzc1OHlhWElFTjFnT2s3eTV6TjFqcW5UU2RJREFVCjFsNzdONk1qS29XTEJNRGVRTnRwUmJ2OWVRcisvVWJETGpCeVU0QVQ0cHZYYy9nTUJCN2tPcmd1ZENJUXlRZVIKSWRFUkxPNy9xVTVJRDFlNTUrVHpTZk1zQWpEV2NVaUFVUG41NjBvOXMrRnlBSUZpSlovV1A3R1dDOUUxVVFuNwo1Z0JTbHNJZE5MS2w3T3ltbm9VQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFDcjlXeXZ4T0lHMDZyejMzUFVKUHF3d0NTZmkKWk4wVU9NVFdQSzEvUm9MRkpveWZxZXNkaHFqL09MRTY4Rk92bzRhYjAvb1VCdHYzVHJvVUM3OWgveWxLblNMTQpFOTIxSm0zNXNwVndXSVlSbERXTXVvNXZ4R0k4ZXk3OTRtZFo1ckhZOTlDRG1OcXhicjRVUG9INHNYK3J4WlRlCnJZMzY5OWZ3RzBHaThaV05Uc2FJRXdMdjgyekJRN2w0Vlp0RGo4V2E2NUg0ZVpHRWpnbkt6U0VpSzBTOWVjUG4KWG9WU1FFUm01aHZGN0RCM3I0bzNqNnhmY0ErZXozQU8wd3BWMm43ejZvRkowZThkQUk1ejBPUkhrUkhodVFuZgpZcFlXUWt4a2taM052am9TWnU5MEJLRU5VUmMzTVlBTnIreFBOejl1UGt3THhva2tnNEpRNUthbzBaMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
              "endpoint": "https://348939D1307D3B404636B9C175411842.gr7.us-east-1.eks.amazonaws.com",
              "kubeconfig_name": "eks_tf-react"
            }
          }
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "template_file",
      "name": "launch_template_userdata",
      "each": "list",
      "provider": "provider.template",
      "instances": []
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "template_file",
      "name": "launch_template_worker_role_arns",
      "each": "list",
      "provider": "provider.template",
      "instances": []
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "template_file",
      "name": "userdata",
      "each": "list",
      "provider": "provider.template",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "c5b1406a92a54ff0dbd9b13766ef8a30f9546aaa7fa68c513289c26ed3ac492c",
            "rendered": "#!/bin/bash -xe\n\n# Allow user supplied pre userdata code\n\n\n# Bootstrap and join the cluster\n/etc/eks/bootstrap.sh --b64-cluster-ca 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJd01ERXlPVEE0TURNME9Gb1hEVE13TURFeU5qQTRNRE0wT0Zvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTVZoCjFwdXFraFBCUTBEa3R3ejNxeW9tb2hOVDl2cjlTQWxUajVKRE5EMThpV0lDOTZPcTQyOVhXZG9OVnBidzJwcXYKMzZjMlg0Yms5VENJcDkyS2d4WG55S2hoSmxNdEFLeGQ3d1VVMHRiNnlmOGN1NldTUlZSUEYwTEdVQVhxWUJlTwpsTnAvUnZFeFJUUGdpdXU2R3dvemtwakNVOTFvV2NIak1rMzc1OHlhWElFTjFnT2s3eTV6TjFqcW5UU2RJREFVCjFsNzdONk1qS29XTEJNRGVRTnRwUmJ2OWVRcisvVWJETGpCeVU0QVQ0cHZYYy9nTUJCN2tPcmd1ZENJUXlRZVIKSWRFUkxPNy9xVTVJRDFlNTUrVHpTZk1zQWpEV2NVaUFVUG41NjBvOXMrRnlBSUZpSlovV1A3R1dDOUUxVVFuNwo1Z0JTbHNJZE5MS2w3T3ltbm9VQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFDcjlXeXZ4T0lHMDZyejMzUFVKUHF3d0NTZmkKWk4wVU9NVFdQSzEvUm9MRkpveWZxZXNkaHFqL09MRTY4Rk92bzRhYjAvb1VCdHYzVHJvVUM3OWgveWxLblNMTQpFOTIxSm0zNXNwVndXSVlSbERXTXVvNXZ4R0k4ZXk3OTRtZFo1ckhZOTlDRG1OcXhicjRVUG9INHNYK3J4WlRlCnJZMzY5OWZ3RzBHaThaV05Uc2FJRXdMdjgyekJRN2w0Vlp0RGo4V2E2NUg0ZVpHRWpnbkt6U0VpSzBTOWVjUG4KWG9WU1FFUm01aHZGN0RCM3I0bzNqNnhmY0ErZXozQU8wd3BWMm43ejZvRkowZThkQUk1ejBPUkhrUkhodVFuZgpZcFlXUWt4a2taM052am9TWnU5MEJLRU5VUmMzTVlBTnIreFBOejl1UGt3THhva2tnNEpRNUthbzBaMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=' --apiserver-endpoint 'https://348939D1307D3B404636B9C175411842.gr7.us-east-1.eks.amazonaws.com'  --kubelet-extra-args \"\" 'tf-react'\n\n# Allow user supplied userdata code\n\n",
            "template": "#!/bin/bash -xe\n\n# Allow user supplied pre userdata code\n${pre_userdata}\n\n# Bootstrap and join the cluster\n/etc/eks/bootstrap.sh --b64-cluster-ca '${cluster_auth_base64}' --apiserver-endpoint '${endpoint}' ${bootstrap_extra_args} --kubelet-extra-args \"${kubelet_extra_args}\" '${cluster_name}'\n\n# Allow user supplied userdata code\n${additional_userdata}\n",
            "vars": {
              "additional_userdata": "",
              "bootstrap_extra_args": "",
              "cluster_auth_base64": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJd01ERXlPVEE0TURNME9Gb1hEVE13TURFeU5qQTRNRE0wT0Zvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTVZoCjFwdXFraFBCUTBEa3R3ejNxeW9tb2hOVDl2cjlTQWxUajVKRE5EMThpV0lDOTZPcTQyOVhXZG9OVnBidzJwcXYKMzZjMlg0Yms5VENJcDkyS2d4WG55S2hoSmxNdEFLeGQ3d1VVMHRiNnlmOGN1NldTUlZSUEYwTEdVQVhxWUJlTwpsTnAvUnZFeFJUUGdpdXU2R3dvemtwakNVOTFvV2NIak1rMzc1OHlhWElFTjFnT2s3eTV6TjFqcW5UU2RJREFVCjFsNzdONk1qS29XTEJNRGVRTnRwUmJ2OWVRcisvVWJETGpCeVU0QVQ0cHZYYy9nTUJCN2tPcmd1ZENJUXlRZVIKSWRFUkxPNy9xVTVJRDFlNTUrVHpTZk1zQWpEV2NVaUFVUG41NjBvOXMrRnlBSUZpSlovV1A3R1dDOUUxVVFuNwo1Z0JTbHNJZE5MS2w3T3ltbm9VQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFDcjlXeXZ4T0lHMDZyejMzUFVKUHF3d0NTZmkKWk4wVU9NVFdQSzEvUm9MRkpveWZxZXNkaHFqL09MRTY4Rk92bzRhYjAvb1VCdHYzVHJvVUM3OWgveWxLblNMTQpFOTIxSm0zNXNwVndXSVlSbERXTXVvNXZ4R0k4ZXk3OTRtZFo1ckhZOTlDRG1OcXhicjRVUG9INHNYK3J4WlRlCnJZMzY5OWZ3RzBHaThaV05Uc2FJRXdMdjgyekJRN2w0Vlp0RGo4V2E2NUg0ZVpHRWpnbkt6U0VpSzBTOWVjUG4KWG9WU1FFUm01aHZGN0RCM3I0bzNqNnhmY0ErZXozQU8wd3BWMm43ejZvRkowZThkQUk1ejBPUkhrUkhodVFuZgpZcFlXUWt4a2taM052am9TWnU5MEJLRU5VUmMzTVlBTnIreFBOejl1UGt3THhva2tnNEpRNUthbzBaMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
              "cluster_name": "tf-react",
              "endpoint": "https://348939D1307D3B404636B9C175411842.gr7.us-east-1.eks.amazonaws.com",
              "kubelet_extra_args": "",
              "platform": "linux",
              "pre_userdata": ""
            }
          }
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "template_file",
      "name": "worker_role_arns",
      "each": "list",
      "provider": "provider.template",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "55fa00ae97303d7b14d7377c3ac569558c9db04c7043736240623d30a13d352a",
            "rendered": "    - rolearn: arn:aws:iam::053732050045:role/tf-react2020012908055537650000000a\n      username: system:node:{{EC2PrivateDNSName}}\n      groups:\n        - system:bootstrappers\n        - system:nodes\n",
            "template": "    - rolearn: ${worker_role_arn}\n      username: system:node:{{EC2PrivateDNSName}}\n      groups:\n        - system:bootstrappers\n        - system:nodes\n        %{~ if platform == \"windows\" ~}\n        - eks:kube-proxy-windows\n        %{~ endif ~}\n",
            "vars": {
              "platform": "linux",
              "worker_role_arn": "arn:aws:iam::053732050045:role/tf-react2020012908055537650000000a"
            }
          }
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_autoscaling_group",
      "name": "workers",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:autoscaling:us-east-1:053732050045:autoScalingGroup:3b8d8c39-6a42-4259-80cf-4b9ec12b188d:autoScalingGroupName/tf-react-tf-react-worker-nodes20200129080615033600000014",
            "availability_zones": [
              "us-east-1a",
              "us-east-1b",
              "us-east-1c"
            ],
            "default_cooldown": 300,
            "desired_capacity": 3,
            "enabled_metrics": null,
            "force_delete": false,
            "health_check_grace_period": 300,
            "health_check_type": "EC2",
            "id": "tf-react-tf-react-worker-nodes20200129080615033600000014",
            "initial_lifecycle_hook": [],
            "launch_configuration": "tf-react-tf-react-worker-nodes20200129080610398400000013",
            "launch_template": [],
            "load_balancers": [],
            "max_instance_lifetime": 0,
            "max_size": 3,
            "metrics_granularity": "1Minute",
            "min_elb_capacity": null,
            "min_size": 1,
            "mixed_instances_policy": [],
            "name": "tf-react-tf-react-worker-nodes20200129080615033600000014",
            "name_prefix": "tf-react-tf-react-worker-nodes",
            "placement_group": "",
            "protect_from_scale_in": false,
            "service_linked_role_arn": "arn:aws:iam::053732050045:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling",
            "suspended_processes": [
              "AZRebalance"
            ],
            "tag": [],
            "tags": [
              {
                "key": "Name",
                "propagate_at_launch": "true",
                "value": "tf-react-tf-react-worker-nodes-eks_asg"
              },
              {
                "key": "kubernetes.io/cluster/tf-react",
                "propagate_at_launch": "true",
                "value": "owned"
              },
              {
                "key": "k8s.io/cluster/tf-react",
                "propagate_at_launch": "true",
                "value": "owned"
              },
              {
                "key": "k8s.io/cluster-autoscaler/disabled",
                "propagate_at_launch": "false",
                "value": "true"
              },
              {
                "key": "k8s.io/cluster-autoscaler/tf-react",
                "propagate_at_launch": "false",
                "value": "tf-react"
              },
              {
                "key": "k8s.io/cluster-autoscaler/node-template/resources/ephemeral-storage",
                "propagate_at_launch": "false",
                "value": "100Gi"
              },
              {
                "key": "Environment",
                "propagate_at_launch": "true",
                "value": "production"
              },
              {
                "key": "Name",
                "propagate_at_launch": "true",
                "value": "tf-react"
              },
              {
                "key": "Project",
                "propagate_at_launch": "true",
                "value": "tf-react"
              }
            ],
            "target_group_arns": [],
            "termination_policies": [],
            "timeouts": null,
            "vpc_zone_identifier": [
              "subnet-02930ac40f1ae3876",
              "subnet-059db593a10d34905",
              "subnet-0c19a58abdfe3dbaf"
            ],
            "wait_for_capacity_timeout": "10m",
            "wait_for_elb_capacity": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "aws_security_group.worker-nodes",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.eks.random_pet.workers",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_autoscaling_group",
      "name": "workers_launch_template",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "this",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "mode": "managed",
      "type": "aws_cloudwatch_log_stream",
      "name": "dockup",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "mode": "managed",
      "type": "aws_codebuild_project",
      "name": "dockup",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "mode": "managed",
      "type": "aws_codebuild_source_credential",
      "name": "dockup",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:codebuild:us-east-1:053732050045:token/github",
            "auth_type": "PERSONAL_ACCESS_TOKEN",
            "id": "arn:aws:codebuild:us-east-1:053732050045:token/github",
            "server_type": "GITHUB",
            "token": "13ec0d9c764c909693d8070aae709cbe0b9f4c01",
            "user_name": null
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_codebuild_webhook",
      "name": "dockup",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_customer_gateway",
      "name": "this",
      "each": "map",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.db.module.db_instance",
      "mode": "managed",
      "type": "aws_db_instance",
      "name": "this",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "address": "tf-react-rds-postgres.cprdpdxq3m8d.us-east-1.rds.amazonaws.com",
            "allocated_storage": 100,
            "allow_major_version_upgrade": false,
            "apply_immediately": true,
            "arn": "arn:aws:rds:us-east-1:053732050045:db:tf-react-rds-postgres",
            "auto_minor_version_upgrade": true,
            "availability_zone": "us-east-1b",
            "backup_retention_period": 0,
            "backup_window": "03:00-06:00",
            "ca_cert_identifier": "rds-ca-2019",
            "character_set_name": null,
            "copy_tags_to_snapshot": false,
            "db_subnet_group_name": "tf-react-rds-postgres-20200129075625018300000008",
            "deletion_protection": false,
            "domain": "",
            "domain_iam_role_name": "",
            "enabled_cloudwatch_logs_exports": [],
            "endpoint": "tf-react-rds-postgres.cprdpdxq3m8d.us-east-1.rds.amazonaws.com:5432",
            "engine": "postgres",
            "engine_version": "9.5.19",
            "final_snapshot_identifier": "tf-react-rds-postgres-snapshot",
            "hosted_zone_id": "Z2R2ITUGPM61AM",
            "iam_database_authentication_enabled": false,
            "id": "tf-react-rds-postgres",
            "identifier": "tf-react-rds-postgres",
            "identifier_prefix": null,
            "instance_class": "db.t2.large",
            "iops": 1000,
            "kms_key_id": "",
            "license_model": "postgresql-license",
            "maintenance_window": "mon:00:00-mon:03:00",
            "max_allocated_storage": 0,
            "monitoring_interval": 0,
            "monitoring_role_arn": "",
            "multi_az": true,
            "name": "dockupcli",
            "option_group_name": "tf-react-rds-postgres-20200129075554714900000001",
            "parameter_group_name": "tf-react-rds-postgres-20200129075554728900000003",
            "password": "dockupclijawakar",
            "performance_insights_enabled": false,
            "performance_insights_kms_key_id": "",
            "performance_insights_retention_period": 0,
            "port": 5432,
            "publicly_accessible": false,
            "replicas": [],
            "replicate_source_db": "",
            "resource_id": "db-W5EIYBMGRNHGHGVA54LMOEK244",
            "s3_import": [],
            "security_group_names": null,
            "skip_final_snapshot": true,
            "snapshot_identifier": "",
            "status": "available",
            "storage_encrypted": false,
            "storage_type": "io1",
            "tags": {
              "Environment": "production",
              "Name": "tf-react-rds-postgres",
              "Project": "tf-react"
            },
            "timeouts": {
              "create": "40m",
              "delete": "40m",
              "update": "80m"
            },
            "timezone": "",
            "username": "dockupcli",
            "vpc_security_group_ids": [
              "sg-0e272637767867b3d"
            ]
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAwLCJkZWxldGUiOjI0MDAwMDAwMDAwMDAsInVwZGF0ZSI6NDgwMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_security_group.nodes-rds-security",
            "aws_security_group.worker-nodes",
            "module.db.module.db_instance.aws_iam_role.enhanced_monitoring",
            "module.db.module.db_option_group.aws_db_option_group.this",
            "module.db.module.db_parameter_group.aws_db_parameter_group.this",
            "module.db.module.db_parameter_group.aws_db_parameter_group.this_no_prefix",
            "module.db.module.db_subnet_group.aws_db_subnet_group.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.db.module.db_instance",
      "mode": "managed",
      "type": "aws_db_instance",
      "name": "this_mssql",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.db.module.db_option_group",
      "mode": "managed",
      "type": "aws_db_option_group",
      "name": "this",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:rds:us-east-1:053732050045:og:tf-react-rds-postgres-20200129075554714900000001",
            "engine_name": "postgres",
            "id": "tf-react-rds-postgres-20200129075554714900000001",
            "major_engine_version": "9.5",
            "name": "tf-react-rds-postgres-20200129075554714900000001",
            "name_prefix": "tf-react-rds-postgres-",
            "option": [],
            "option_group_description": "Option group for tf-react-rds-postgres",
            "tags": {
              "Environment": "production",
              "Name": "tf-react-rds-postgres",
              "Project": "tf-react"
            },
            "timeouts": {
              "delete": "15m"
            }
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjo5MDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "module": "module.db.module.db_parameter_group",
      "mode": "managed",
      "type": "aws_db_parameter_group",
      "name": "this",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:rds:us-east-1:053732050045:pg:tf-react-rds-postgres-20200129075554728900000003",
            "description": "Database parameter group for tf-react-rds-postgres",
            "family": "postgres9.5",
            "id": "tf-react-rds-postgres-20200129075554728900000003",
            "name": "tf-react-rds-postgres-20200129075554728900000003",
            "name_prefix": "tf-react-rds-postgres-",
            "parameter": [],
            "tags": {
              "Environment": "production",
              "Name": "tf-react-rds-postgres",
              "Project": "tf-react"
            }
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.db.module.db_parameter_group",
      "mode": "managed",
      "type": "aws_db_parameter_group",
      "name": "this_no_prefix",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_db_subnet_group",
      "name": "database",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.db.module.db_subnet_group",
      "mode": "managed",
      "type": "aws_db_subnet_group",
      "name": "this",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:rds:us-east-1:053732050045:subgrp:tf-react-rds-postgres-20200129075625018300000008",
            "description": "Database subnet group for tf-react-rds-postgres",
            "id": "tf-react-rds-postgres-20200129075625018300000008",
            "name": "tf-react-rds-postgres-20200129075625018300000008",
            "name_prefix": "tf-react-rds-postgres-",
            "subnet_ids": [
              "subnet-02930ac40f1ae3876",
              "subnet-059db593a10d34905",
              "subnet-0c19a58abdfe3dbaf"
            ],
            "tags": {
              "Environment": "production",
              "Name": "tf-react-rds-postgres",
              "Project": "tf-react"
            }
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_default_network_acl",
      "name": "this",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_default_vpc",
      "name": "this",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_egress_only_internet_gateway",
      "name": "this",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_eip",
      "name": "nat",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "allocation_id": null,
            "associate_with_private_ip": null,
            "association_id": "",
            "domain": "vpc",
            "id": "eipalloc-09f9e2f040a874e76",
            "instance": "",
            "network_interface": "",
            "private_dns": null,
            "private_ip": "",
            "public_dns": "ec2-3-217-122-66.compute-1.amazonaws.com",
            "public_ip": "3.217.122.66",
            "public_ipv4_pool": "amazon",
            "tags": {
              "Name": "tf-react-vpc-us-east-1a",
              "kubernetes.io/cluster/tf-react": "shared"
            },
            "timeouts": null,
            "vpc": true
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxODAwMDAwMDAwMDAsInJlYWQiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_eks_cluster",
      "name": "this",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:eks:us-east-1:053732050045:cluster/tf-react",
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJd01ERXlPVEE0TURNME9Gb1hEVE13TURFeU5qQTRNRE0wT0Zvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTVZoCjFwdXFraFBCUTBEa3R3ejNxeW9tb2hOVDl2cjlTQWxUajVKRE5EMThpV0lDOTZPcTQyOVhXZG9OVnBidzJwcXYKMzZjMlg0Yms5VENJcDkyS2d4WG55S2hoSmxNdEFLeGQ3d1VVMHRiNnlmOGN1NldTUlZSUEYwTEdVQVhxWUJlTwpsTnAvUnZFeFJUUGdpdXU2R3dvemtwakNVOTFvV2NIak1rMzc1OHlhWElFTjFnT2s3eTV6TjFqcW5UU2RJREFVCjFsNzdONk1qS29XTEJNRGVRTnRwUmJ2OWVRcisvVWJETGpCeVU0QVQ0cHZYYy9nTUJCN2tPcmd1ZENJUXlRZVIKSWRFUkxPNy9xVTVJRDFlNTUrVHpTZk1zQWpEV2NVaUFVUG41NjBvOXMrRnlBSUZpSlovV1A3R1dDOUUxVVFuNwo1Z0JTbHNJZE5MS2w3T3ltbm9VQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFDcjlXeXZ4T0lHMDZyejMzUFVKUHF3d0NTZmkKWk4wVU9NVFdQSzEvUm9MRkpveWZxZXNkaHFqL09MRTY4Rk92bzRhYjAvb1VCdHYzVHJvVUM3OWgveWxLblNMTQpFOTIxSm0zNXNwVndXSVlSbERXTXVvNXZ4R0k4ZXk3OTRtZFo1ckhZOTlDRG1OcXhicjRVUG9INHNYK3J4WlRlCnJZMzY5OWZ3RzBHaThaV05Uc2FJRXdMdjgyekJRN2w0Vlp0RGo4V2E2NUg0ZVpHRWpnbkt6U0VpSzBTOWVjUG4KWG9WU1FFUm01aHZGN0RCM3I0bzNqNnhmY0ErZXozQU8wd3BWMm43ejZvRkowZThkQUk1ejBPUkhrUkhodVFuZgpZcFlXUWt4a2taM052am9TWnU5MEJLRU5VUmMzTVlBTnIreFBOejl1UGt3THhva2tnNEpRNUthbzBaMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
              }
            ],
            "created_at": "2020-01-29 07:56:32 +0000 UTC",
            "enabled_cluster_log_types": null,
            "endpoint": "https://348939D1307D3B404636B9C175411842.gr7.us-east-1.eks.amazonaws.com",
            "id": "tf-react",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.us-east-1.amazonaws.com/id/348939D1307D3B404636B9C175411842"
                  }
                ]
              }
            ],
            "name": "tf-react",
            "platform_version": "eks.7",
            "role_arn": "arn:aws:iam::053732050045:role/tf-react20200129075554719600000002",
            "status": "ACTIVE",
            "tags": {
              "Environment": "production",
              "Name": "tf-react",
              "Project": "tf-react"
            },
            "timeouts": {
              "create": "15m",
              "delete": "15m",
              "update": null
            },
            "version": "1.14",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-01b83b06af0ba5bcd",
                "endpoint_private_access": false,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-0edc2449253b14f78"
                ],
                "subnet_ids": [
                  "subnet-02930ac40f1ae3876",
                  "subnet-059db593a10d34905",
                  "subnet-0c19a58abdfe3dbaf"
                ],
                "vpc_id": "vpc-08c1795e9a1f77dc1"
              }
            ]
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo5MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwLCJ1cGRhdGUiOjM2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.cluster",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_elasticache_subnet_group",
      "name": "elasticache",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_instance_profile",
      "name": "workers",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::053732050045:instance-profile/tf-react2020012908055866690000000d",
            "create_date": "2020-01-29T08:05:59Z",
            "id": "tf-react2020012908055866690000000d",
            "name": "tf-react2020012908055866690000000d",
            "name_prefix": "tf-react",
            "path": "/",
            "role": "tf-react2020012908055537650000000a",
            "roles": [],
            "unique_id": "AIPAQZAVOAR63ZK67GAXF"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_security_group.worker-nodes",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.cluster",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_instance_profile",
      "name": "workers_launch_template",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "ecr-eks-policy",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::053732050045:policy/tf-react-ecr-eks-policy",
            "description": "A policy to allow AWS EKS Worker node to pull images from AWS ECR",
            "id": "arn:aws:iam::053732050045:policy/tf-react-ecr-eks-policy",
            "name": "tf-react-ecr-eks-policy",
            "name_prefix": null,
            "path": "/",
            "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ecr:BatchCheckLayerAvailability\",\n                \"ecr:BatchGetImage\",\n                \"ecr:GetDownloadUrlForLayer\",\n                \"ecr:GetAuthorizationToken\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\n"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "worker_autoscaling",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::053732050045:policy/eks-worker-autoscaling-tf-react2020012908055540570000000c",
            "description": "EKS worker node autoscaling policy for cluster tf-react",
            "id": "arn:aws:iam::053732050045:policy/eks-worker-autoscaling-tf-react2020012908055540570000000c",
            "name": "eks-worker-autoscaling-tf-react2020012908055540570000000c",
            "name_prefix": "eks-worker-autoscaling-tf-react",
            "path": "/",
            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"eksWorkerAutoscalingAll\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeLaunchTemplateVersions\",\n        \"autoscaling:DescribeTags\",\n        \"autoscaling:DescribeLaunchConfigurations\",\n        \"autoscaling:DescribeAutoScalingInstances\",\n        \"autoscaling:DescribeAutoScalingGroups\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"eksWorkerAutoscalingOwn\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"autoscaling:UpdateAutoScalingGroup\",\n        \"autoscaling:TerminateInstanceInAutoScalingGroup\",\n        \"autoscaling:SetDesiredCapacity\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"autoscaling:ResourceTag/k8s.io/cluster-autoscaler/enabled\": \"true\",\n          \"autoscaling:ResourceTag/kubernetes.io/cluster/tf-react\": \"owned\"\n        }\n      }\n    }\n  ]\n}"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.cluster",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "cluster",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::053732050045:role/tf-react20200129075554719600000002",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSClusterAssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2020-01-29T07:55:56Z",
            "description": "",
            "force_detach_policies": true,
            "id": "tf-react20200129075554719600000002",
            "max_session_duration": 3600,
            "name": "tf-react20200129075554719600000002",
            "name_prefix": "tf-react",
            "path": "/",
            "permissions_boundary": null,
            "tags": {
              "Environment": "production",
              "Name": "tf-react",
              "Project": "tf-react"
            },
            "unique_id": "AROAQZAVOAR66YXC3TSKR"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "dockup-codebuild",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::053732050045:role/tf-react-codebuild",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"codebuild.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2020-01-29T07:55:56Z",
            "description": "",
            "force_detach_policies": false,
            "id": "tf-react-codebuild",
            "max_session_duration": 3600,
            "name": "tf-react-codebuild",
            "name_prefix": null,
            "path": "/",
            "permissions_boundary": null,
            "tags": null,
            "unique_id": "AROAQZAVOAR66RJVAWAWH"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.db.module.db_instance",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "enhanced_monitoring",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "workers",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::053732050045:role/tf-react2020012908055537650000000a",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSWorkerAssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2020-01-29T08:05:56Z",
            "description": "",
            "force_detach_policies": true,
            "id": "tf-react2020012908055537650000000a",
            "max_session_duration": 3600,
            "name": "tf-react2020012908055537650000000a",
            "name_prefix": "tf-react",
            "path": "/",
            "permissions_boundary": null,
            "tags": {
              "Environment": "production",
              "Name": "tf-react",
              "Project": "tf-react"
            },
            "unique_id": "AROAQZAVOAR64R3SBPZ6C"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.cluster",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "codebuild",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_AmazonEKSClusterPolicy",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "tf-react20200129075554719600000002-20200129075605507400000004",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
            "role": "tf-react20200129075554719600000002"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.cluster"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_AmazonEKSServicePolicy",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "tf-react20200129075554719600000002-20200129075605565300000005",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSServicePolicy",
            "role": "tf-react20200129075554719600000002"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.cluster"
          ]
        }
      ]
    },
    {
      "module": "module.db.module.db_instance",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "enhanced_monitoring",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "workers_AmazonEC2ContainerRegistryReadOnly",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "tf-react2020012908055537650000000a-20200129080600066800000011",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
            "role": "tf-react2020012908055537650000000a"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.cluster",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "workers_AmazonEKSWorkerNodePolicy",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "tf-react2020012908055537650000000a-2020012908055986660000000e",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
            "role": "tf-react2020012908055537650000000a"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.cluster",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "workers_AmazonEKS_CNI_Policy",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "tf-react2020012908055537650000000a-20200129080559946400000010",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
            "role": "tf-react2020012908055537650000000a"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.cluster",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "workers_additional_policies",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "tf-react2020012908055537650000000a-2020012908055986940000000f",
            "policy_arn": "arn:aws:iam::053732050045:policy/tf-react-ecr-eks-policy",
            "role": "tf-react2020012908055537650000000a"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_policy.ecr-eks-policy",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.cluster",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "workers_autoscaling",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "tf-react2020012908055537650000000a-20200129080601222900000012",
            "policy_arn": "arn:aws:iam::053732050045:policy/eks-worker-autoscaling-tf-react2020012908055540570000000c",
            "role": "tf-react2020012908055537650000000a"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.worker_autoscaling",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.cluster",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_internet_gateway",
      "name": "this",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "igw-0ad1aada995ae2f47",
            "owner_id": "053732050045",
            "tags": {
              "Name": "tf-react-vpc",
              "kubernetes.io/cluster/tf-react": "shared"
            },
            "vpc_id": "vpc-08c1795e9a1f77dc1"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_launch_configuration",
      "name": "workers",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:autoscaling:us-east-1:053732050045:launchConfiguration:928400c7-7ddf-44ff-8edf-4c8b0bf9b11b:launchConfigurationName/tf-react-tf-react-worker-nodes20200129080610398400000013",
            "associate_public_ip_address": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enable_monitoring": true,
            "ephemeral_block_device": [],
            "iam_instance_profile": "tf-react2020012908055866690000000d",
            "id": "tf-react-tf-react-worker-nodes20200129080610398400000013",
            "image_id": "ami-087a82f6b78a07557",
            "instance_type": "t2.medium",
            "key_name": "",
            "name": "tf-react-tf-react-worker-nodes20200129080610398400000013",
            "name_prefix": "tf-react-tf-react-worker-nodes",
            "placement_tenancy": "",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "encrypted": false,
                "iops": 0,
                "volume_size": 100,
                "volume_type": "gp2"
              }
            ],
            "security_groups": [
              "sg-04169c037fe29b75a",
              "sg-0a40a274b5a73b2d8"
            ],
            "spot_price": "",
            "user_data": null,
            "user_data_base64": "IyEvYmluL2Jhc2ggLXhlCgojIEFsbG93IHVzZXIgc3VwcGxpZWQgcHJlIHVzZXJkYXRhIGNvZGUKCgojIEJvb3RzdHJhcCBhbmQgam9pbiB0aGUgY2x1c3RlcgovZXRjL2Vrcy9ib290c3RyYXAuc2ggLS1iNjQtY2x1c3Rlci1jYSAnTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVTjVSRU5EUVdKRFowRjNTVUpCWjBsQ1FVUkJUa0puYTNGb2EybEhPWGN3UWtGUmMwWkJSRUZXVFZKTmQwVlJXVVJXVVZGRVJYZHdjbVJYU213S1kyMDFiR1JIVm5wTlFqUllSRlJKZDAxRVJYbFBWRUUwVFVSTk1FOUdiMWhFVkUxM1RVUkZlVTVxUVRSTlJFMHdUMFp2ZDBaVVJWUk5Ra1ZIUVRGVlJRcEJlRTFMWVROV2FWcFlTblZhV0ZKc1kzcERRMEZUU1hkRVVWbEtTMjlhU1doMlkwNUJVVVZDUWxGQlJHZG5SVkJCUkVORFFWRnZRMmRuUlVKQlRWWm9DakZ3ZFhGcmFGQkNVVEJFYTNSM2VqTnhlVzl0YjJoT1ZEbDJjamxUUVd4VWFqVktSRTVFTVRocFYwbERPVFpQY1RReU9WaFhaRzlPVm5CaWR6SndjWFlLTXpaak1sZzBZbXM1VkVOSmNEa3lTMmQ0V0c1NVMyaG9TbXhOZEVGTGVHUTNkMVZWTUhSaU5ubG1PR04xTmxkVFVsWlNVRVl3VEVkVlFWaHhXVUpsVHdwc1RuQXZVblpGZUZKVVVHZHBkWFUyUjNkdmVtdHdha05WT1RGdlYyTklhazFyTXpjMU9IbGhXRWxGVGpGblQyczNlVFY2VGpGcWNXNVVVMlJKUkVGVkNqRnNOemRPTmsxcVMyOVhURUpOUkdWUlRuUndVbUoyT1dWUmNpc3ZWV0pFVEdwQ2VWVTBRVlEwY0haWVl5OW5UVUpDTjJ0UGNtZDFaRU5KVVhsUlpWSUtTV1JGVWt4UE55OXhWVFZKUkRGbE5UVXJWSHBUWmsxelFXcEVWMk5WYVVGVlVHNDFOakJ2T1hNclJubEJTVVpwU2xvdlYxQTNSMWRET1VVeFZWRnVOd28xWjBKVGJITkpaRTVNUzJ3M1QzbHRibTlWUTBGM1JVRkJZVTFxVFVORmQwUm5XVVJXVWpCUVFWRklMMEpCVVVSQlowdHJUVUU0UjBFeFZXUkZkMFZDQ2k5M1VVWk5RVTFDUVdZNGQwUlJXVXBMYjFwSmFIWmpUa0ZSUlV4Q1VVRkVaMmRGUWtGRGNqbFhlWFo0VDBsSE1EWnllak16VUZWS1VIRjNkME5UWm1rS1drNHdWVTlOVkZkUVN6RXZVbTlNUmtwdmVXWnhaWE5rYUhGcUwwOU1SVFk0Ums5MmJ6UmhZakF2YjFWQ2RIWXpWSEp2VlVNM09XZ3ZlV3hMYmxOTVRRcEZPVEl4U20wek5YTndWbmRYU1ZsU2JFUlhUWFZ2TlhaNFIwazRaWGszT1RSdFpGbzFja2haT1RsRFJHMU9jWGhpY2pSVlVHOUlOSE5ZSzNKNFdsUmxDbkpaTXpZNU9XWjNSekJIYVRoYVYwNVVjMkZKUlhkTWRqZ3lla0pSTjJ3MFZscDBSR280VjJFMk5VZzBaVnBIUldwbmJrdDZVMFZwU3pCVE9XVmpVRzRLV0c5V1UxRkZVbTAxYUhaR04wUkNNM0kwYnpOcU5uaG1ZMEVyWlhvelFVOHdkM0JXTW00M2VqWnZSa293WlRoa1FVazFlakJQVWtoclVraG9kVkZ1WmdwWmNGbFhVV3Q0YTJ0YU0wNTJhbTlUV25VNU1FSkxSVTVWVW1NelRWbEJUbklyZUZCT2VqbDFVR3QzVEhodmEydG5ORXBSTlV0aGJ6QmFNRDBLTFMwdExTMUZUa1FnUTBWU1ZFbEdTVU5CVkVVdExTMHRMUW89JyAtLWFwaXNlcnZlci1lbmRwb2ludCAnaHR0cHM6Ly8zNDg5MzlEMTMwN0QzQjQwNDYzNkI5QzE3NTQxMTg0Mi5ncjcudXMtZWFzdC0xLmVrcy5hbWF6b25hd3MuY29tJyAgLS1rdWJlbGV0LWV4dHJhLWFyZ3MgIiIgJ3RmLXJlYWN0JwoKIyBBbGxvdyB1c2VyIHN1cHBsaWVkIHVzZXJkYXRhIGNvZGUKCg==",
            "vpc_classic_link_id": "",
            "vpc_classic_link_security_groups": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_security_group.worker-nodes",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_launch_template",
      "name": "workers_launch_template",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_nat_gateway",
      "name": "this",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "allocation_id": "eipalloc-09f9e2f040a874e76",
            "id": "nat-0d8ab93090adf228c",
            "network_interface_id": "eni-0f7474b70a7d7af32",
            "private_ip": "10.0.4.214",
            "public_ip": "3.217.122.66",
            "subnet_id": "subnet-06c88bef72d0d2c40",
            "tags": {
              "Name": "tf-react-vpc-us-east-1a",
              "kubernetes.io/cluster/tf-react": "shared"
            }
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.vpc.aws_eip.nat",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_network_acl",
      "name": "database",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_network_acl",
      "name": "elasticache",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_network_acl",
      "name": "intra",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_network_acl",
      "name": "private",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_network_acl",
      "name": "public",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_network_acl",
      "name": "redshift",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_network_acl_rule",
      "name": "database_inbound",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_network_acl_rule",
      "name": "database_outbound",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_network_acl_rule",
      "name": "elasticache_inbound",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_network_acl_rule",
      "name": "elasticache_outbound",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_network_acl_rule",
      "name": "intra_inbound",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_network_acl_rule",
      "name": "intra_outbound",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_network_acl_rule",
      "name": "private_inbound",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_network_acl_rule",
      "name": "private_outbound",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_network_acl_rule",
      "name": "public_inbound",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_network_acl_rule",
      "name": "public_outbound",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_network_acl_rule",
      "name": "redshift_inbound",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_network_acl_rule",
      "name": "redshift_outbound",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_redshift_subnet_group",
      "name": "redshift",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "database_internet_gateway",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "database_ipv6_egress",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "database_nat_gateway",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "private_ipv6_egress",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "private_nat_gateway",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": null,
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "",
            "id": "r-rtb-044786d40e26ffd461080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "nat_gateway_id": "nat-0d8ab93090adf228c",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-044786d40e26ffd46",
            "state": "active",
            "timeouts": {
              "create": "5m",
              "delete": null
            },
            "transit_gateway_id": "",
            "vpc_peering_connection_id": ""
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.vpc.aws_eip.nat",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_nat_gateway.this",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "public_internet_gateway",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": null,
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "igw-0ad1aada995ae2f47",
            "id": "r-rtb-0d3ecd3de4758a4181080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "nat_gateway_id": "",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-0d3ecd3de4758a418",
            "state": "active",
            "timeouts": {
              "create": "5m",
              "delete": null
            },
            "transit_gateway_id": "",
            "vpc_peering_connection_id": ""
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "public_internet_gateway_ipv6",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "database",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "elasticache",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "intra",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "private",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "rtb-044786d40e26ffd46",
            "owner_id": "053732050045",
            "propagating_vgws": [],
            "route": [],
            "tags": {
              "Name": "tf-react-vpc-private",
              "kubernetes.io/cluster/tf-react": "shared"
            },
            "vpc_id": "vpc-08c1795e9a1f77dc1"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "public",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "rtb-0d3ecd3de4758a418",
            "owner_id": "053732050045",
            "propagating_vgws": [],
            "route": [],
            "tags": {
              "Name": "tf-react-vpc-public",
              "kubernetes.io/cluster/tf-react": "shared"
            },
            "vpc_id": "vpc-08c1795e9a1f77dc1"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "redshift",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "database",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "elasticache",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "intra",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "private",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway_id": null,
            "id": "rtbassoc-08229d5217ca22001",
            "route_table_id": "rtb-044786d40e26ffd46",
            "subnet_id": "subnet-0c19a58abdfe3dbaf"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "gateway_id": null,
            "id": "rtbassoc-09fc01d0329f6238c",
            "route_table_id": "rtb-044786d40e26ffd46",
            "subnet_id": "subnet-02930ac40f1ae3876"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "gateway_id": null,
            "id": "rtbassoc-05420dcb3ea0a4627",
            "route_table_id": "rtb-044786d40e26ffd46",
            "subnet_id": "subnet-059db593a10d34905"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "public",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway_id": null,
            "id": "rtbassoc-0b6b66f5df90993ad",
            "route_table_id": "rtb-0d3ecd3de4758a418",
            "subnet_id": "subnet-06c88bef72d0d2c40"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "gateway_id": null,
            "id": "rtbassoc-099e00a0ffe107870",
            "route_table_id": "rtb-0d3ecd3de4758a418",
            "subnet_id": "subnet-000a41923421f2860"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "gateway_id": null,
            "id": "rtbassoc-0629a69281e9d5a28",
            "route_table_id": "rtb-0d3ecd3de4758a418",
            "subnet_id": "subnet-01303513ac1ede1fa"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "redshift",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "redshift_public",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "cluster",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:053732050045:security-group/sg-0edc2449253b14f78",
            "description": "EKS cluster security group.",
            "egress": [],
            "id": "sg-0edc2449253b14f78",
            "ingress": [],
            "name": "tf-react20200129075618306900000006",
            "name_prefix": "tf-react",
            "owner_id": "053732050045",
            "revoke_rules_on_delete": false,
            "tags": {
              "Environment": "production",
              "Name": "tf-react-eks_cluster_sg",
              "Project": "tf-react"
            },
            "timeouts": null,
            "vpc_id": "vpc-08c1795e9a1f77dc1"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group",
      "name": "nodes-rds-security",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:053732050045:security-group/sg-0e272637767867b3d",
            "description": "Allow all nodes from the worker groups to communicate with RDS",
            "egress": [],
            "id": "sg-0e272637767867b3d",
            "ingress": [
              {
                "cidr_blocks": [],
                "description": "",
                "from_port": 5432,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0a40a274b5a73b2d8"
                ],
                "self": false,
                "to_port": 5432
              }
            ],
            "name": "tf-react-eks-nodes-rds20200129075629013100000009",
            "name_prefix": "tf-react-eks-nodes-rds",
            "owner_id": "053732050045",
            "revoke_rules_on_delete": false,
            "tags": null,
            "timeouts": null,
            "vpc_id": "vpc-08c1795e9a1f77dc1"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "aws_security_group.worker-nodes",
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group",
      "name": "worker-nodes",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:053732050045:security-group/sg-0a40a274b5a73b2d8",
            "description": "Security group to allow worker nodes to communicate each other",
            "egress": [],
            "id": "sg-0a40a274b5a73b2d8",
            "ingress": [
              {
                "cidr_blocks": [
                  "10.0.0.0/8",
                  "172.16.0.0/12",
                  "192.168.0.0/16"
                ],
                "description": "",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 443
              },
              {
                "cidr_blocks": [
                  "10.0.0.0/8",
                  "192.168.0.0/16",
                  "172.16.0.0/12"
                ],
                "description": "",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              }
            ],
            "name": "tf-react-eks-worker-nodes20200129075618313700000007",
            "name_prefix": "tf-react-eks-worker-nodes",
            "owner_id": "053732050045",
            "revoke_rules_on_delete": false,
            "tags": null,
            "timeouts": null,
            "vpc_id": "vpc-08c1795e9a1f77dc1"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "workers",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:053732050045:security-group/sg-04169c037fe29b75a",
            "description": "Security group for all nodes in the cluster.",
            "egress": [],
            "id": "sg-04169c037fe29b75a",
            "ingress": [],
            "name": "tf-react2020012908055539700000000b",
            "name_prefix": "tf-react",
            "owner_id": "053732050045",
            "revoke_rules_on_delete": false,
            "tags": {
              "Environment": "production",
              "Name": "tf-react-eks_worker_sg",
              "Project": "tf-react",
              "kubernetes.io/cluster/tf-react": "owned"
            },
            "timeouts": null,
            "vpc_id": "vpc-08c1795e9a1f77dc1"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.cluster",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "cluster_egress_internet",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "Allow cluster egress access to the Internet.",
            "from_port": 0,
            "id": "sgrule-3055203169",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "-1",
            "security_group_id": "sg-0edc2449253b14f78",
            "self": false,
            "source_security_group_id": null,
            "to_port": 0,
            "type": "egress"
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "cluster_https_worker_ingress",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Allow pods to communicate with the EKS cluster API.",
            "from_port": 443,
            "id": "sgrule-2098837890",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "tcp",
            "security_group_id": "sg-0edc2449253b14f78",
            "self": false,
            "source_security_group_id": "sg-04169c037fe29b75a",
            "to_port": 443,
            "type": "ingress"
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "workers_egress_internet",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "Allow nodes all egress to the Internet.",
            "from_port": 0,
            "id": "sgrule-2805348505",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "-1",
            "security_group_id": "sg-04169c037fe29b75a",
            "self": false,
            "source_security_group_id": null,
            "to_port": 0,
            "type": "egress"
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "workers_ingress_cluster",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Allow workers pods to receive communication from the cluster control plane.",
            "from_port": 1025,
            "id": "sgrule-4139237213",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "tcp",
            "security_group_id": "sg-04169c037fe29b75a",
            "self": false,
            "source_security_group_id": "sg-0edc2449253b14f78",
            "to_port": 65535,
            "type": "ingress"
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "workers_ingress_cluster_https",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Allow pods running extension API servers on port 443 to receive communication from cluster control plane.",
            "from_port": 443,
            "id": "sgrule-2464742215",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "tcp",
            "security_group_id": "sg-04169c037fe29b75a",
            "self": false,
            "source_security_group_id": "sg-0edc2449253b14f78",
            "to_port": 443,
            "type": "ingress"
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "workers_ingress_cluster_kubelet",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "workers_ingress_self",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Allow node to communicate with each other.",
            "from_port": 0,
            "id": "sgrule-3652356710",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "-1",
            "security_group_id": "sg-04169c037fe29b75a",
            "self": false,
            "source_security_group_id": "sg-04169c037fe29b75a",
            "to_port": 65535,
            "type": "ingress"
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "database",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "elasticache",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "intra",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "private",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:053732050045:subnet/subnet-0c19a58abdfe3dbaf",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1a",
            "availability_zone_id": "use1-az4",
            "cidr_block": "10.0.1.0/24",
            "id": "subnet-0c19a58abdfe3dbaf",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_public_ip_on_launch": false,
            "owner_id": "053732050045",
            "tags": {
              "Name": "tf-react-vpc-private-us-east-1a",
              "kubernetes.io/cluster/tf-react": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-08c1795e9a1f77dc1"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:053732050045:subnet/subnet-02930ac40f1ae3876",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1b",
            "availability_zone_id": "use1-az6",
            "cidr_block": "10.0.2.0/24",
            "id": "subnet-02930ac40f1ae3876",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_public_ip_on_launch": false,
            "owner_id": "053732050045",
            "tags": {
              "Name": "tf-react-vpc-private-us-east-1b",
              "kubernetes.io/cluster/tf-react": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-08c1795e9a1f77dc1"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:053732050045:subnet/subnet-059db593a10d34905",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1c",
            "availability_zone_id": "use1-az1",
            "cidr_block": "10.0.3.0/24",
            "id": "subnet-059db593a10d34905",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_public_ip_on_launch": false,
            "owner_id": "053732050045",
            "tags": {
              "Name": "tf-react-vpc-private-us-east-1c",
              "kubernetes.io/cluster/tf-react": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-08c1795e9a1f77dc1"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "public",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:053732050045:subnet/subnet-06c88bef72d0d2c40",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1a",
            "availability_zone_id": "use1-az4",
            "cidr_block": "10.0.4.0/24",
            "id": "subnet-06c88bef72d0d2c40",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_public_ip_on_launch": true,
            "owner_id": "053732050045",
            "tags": {
              "Name": "tf-react-vpc-public-us-east-1a",
              "kubernetes.io/cluster/tf-react": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-08c1795e9a1f77dc1"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:053732050045:subnet/subnet-000a41923421f2860",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1b",
            "availability_zone_id": "use1-az6",
            "cidr_block": "10.0.5.0/24",
            "id": "subnet-000a41923421f2860",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_public_ip_on_launch": true,
            "owner_id": "053732050045",
            "tags": {
              "Name": "tf-react-vpc-public-us-east-1b",
              "kubernetes.io/cluster/tf-react": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-08c1795e9a1f77dc1"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:053732050045:subnet/subnet-01303513ac1ede1fa",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1c",
            "availability_zone_id": "use1-az1",
            "cidr_block": "10.0.6.0/24",
            "id": "subnet-01303513ac1ede1fa",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_public_ip_on_launch": true,
            "owner_id": "053732050045",
            "tags": {
              "Name": "tf-react-vpc-public-us-east-1c",
              "kubernetes.io/cluster/tf-react": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-08c1795e9a1f77dc1"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "redshift",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc",
      "name": "this",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:053732050045:vpc/vpc-08c1795e9a1f77dc1",
            "assign_generated_ipv6_cidr_block": false,
            "cidr_block": "10.0.0.0/16",
            "default_network_acl_id": "acl-03fe8aab7bc60a7c2",
            "default_route_table_id": "rtb-0a3a4855f69a92106",
            "default_security_group_id": "sg-01a1c6303075fb16f",
            "dhcp_options_id": "dopt-59a79322",
            "enable_classiclink": false,
            "enable_classiclink_dns_support": false,
            "enable_dns_hostnames": true,
            "enable_dns_support": true,
            "id": "vpc-08c1795e9a1f77dc1",
            "instance_tenancy": "default",
            "ipv6_association_id": "",
            "ipv6_cidr_block": "",
            "main_route_table_id": "rtb-0a3a4855f69a92106",
            "owner_id": "053732050045",
            "tags": {
              "Name": "tf-react-vpc",
              "kubernetes.io/cluster/tf-react": "shared"
            }
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_dhcp_options",
      "name": "this",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_dhcp_options_association",
      "name": "this",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "apigw",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "appmesh_envoy_management",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "appstream",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "athena",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "cloud_directory",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "cloudformation",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "cloudtrail",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "codebuild",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "codecommit",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "codepipeline",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "config",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "dynamodb",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "ec2",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "ec2messages",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "ecr_api",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "ecr_dkr",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "ecs",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "ecs_agent",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "ecs_telemetry",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "efs",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "elasticloadbalancing",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "events",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "git_codecommit",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "glue",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "kinesis_firehose",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "kinesis_streams",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "kms",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "logs",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "monitoring",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "rekognition",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "s3",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "sagemaker_api",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "sagemaker_notebook",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "sagemaker_runtime",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "secretsmanager",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "servicecatalog",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "sns",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "sqs",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "ssm",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "ssmmessages",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "storagegateway",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "sts",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "transfer",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "transferserver",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint_route_table_association",
      "name": "intra_dynamodb",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint_route_table_association",
      "name": "intra_s3",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint_route_table_association",
      "name": "private_dynamodb",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint_route_table_association",
      "name": "private_s3",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint_route_table_association",
      "name": "public_dynamodb",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint_route_table_association",
      "name": "public_s3",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc_ipv4_cidr_block_association",
      "name": "this",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpn_gateway",
      "name": "this",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpn_gateway_attachment",
      "name": "this",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpn_gateway_route_propagation",
      "name": "private",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpn_gateway_route_propagation",
      "name": "public",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "local_file",
      "name": "config_map_aws_auth",
      "each": "list",
      "provider": "provider.local",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "content": "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: aws-auth\n  namespace: kube-system\ndata:\n  mapRoles: |\n    - rolearn: arn:aws:iam::053732050045:role/tf-react2020012908055537650000000a\n      username: system:node:{{EC2PrivateDNSName}}\n      groups:\n        - system:bootstrappers\n        - system:nodes\n\n  \n  \n  \n",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "./config-map-aws-auth_tf-react.yaml",
            "id": "dc9f25138605dfa3edd71768e92f82c98b662c38",
            "sensitive_content": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_security_group.worker-nodes",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.cluster",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "local_file",
      "name": "kubeconfig",
      "each": "list",
      "provider": "provider.local",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "content": "apiVersion: v1\npreferences: {}\nkind: Config\n\nclusters:\n- cluster:\n    server: https://348939D1307D3B404636B9C175411842.gr7.us-east-1.eks.amazonaws.com\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJd01ERXlPVEE0TURNME9Gb1hEVE13TURFeU5qQTRNRE0wT0Zvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTVZoCjFwdXFraFBCUTBEa3R3ejNxeW9tb2hOVDl2cjlTQWxUajVKRE5EMThpV0lDOTZPcTQyOVhXZG9OVnBidzJwcXYKMzZjMlg0Yms5VENJcDkyS2d4WG55S2hoSmxNdEFLeGQ3d1VVMHRiNnlmOGN1NldTUlZSUEYwTEdVQVhxWUJlTwpsTnAvUnZFeFJUUGdpdXU2R3dvemtwakNVOTFvV2NIak1rMzc1OHlhWElFTjFnT2s3eTV6TjFqcW5UU2RJREFVCjFsNzdONk1qS29XTEJNRGVRTnRwUmJ2OWVRcisvVWJETGpCeVU0QVQ0cHZYYy9nTUJCN2tPcmd1ZENJUXlRZVIKSWRFUkxPNy9xVTVJRDFlNTUrVHpTZk1zQWpEV2NVaUFVUG41NjBvOXMrRnlBSUZpSlovV1A3R1dDOUUxVVFuNwo1Z0JTbHNJZE5MS2w3T3ltbm9VQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFDcjlXeXZ4T0lHMDZyejMzUFVKUHF3d0NTZmkKWk4wVU9NVFdQSzEvUm9MRkpveWZxZXNkaHFqL09MRTY4Rk92bzRhYjAvb1VCdHYzVHJvVUM3OWgveWxLblNMTQpFOTIxSm0zNXNwVndXSVlSbERXTXVvNXZ4R0k4ZXk3OTRtZFo1ckhZOTlDRG1OcXhicjRVUG9INHNYK3J4WlRlCnJZMzY5OWZ3RzBHaThaV05Uc2FJRXdMdjgyekJRN2w0Vlp0RGo4V2E2NUg0ZVpHRWpnbkt6U0VpSzBTOWVjUG4KWG9WU1FFUm01aHZGN0RCM3I0bzNqNnhmY0ErZXozQU8wd3BWMm43ejZvRkowZThkQUk1ejBPUkhrUkhodVFuZgpZcFlXUWt4a2taM052am9TWnU5MEJLRU5VUmMzTVlBTnIreFBOejl1UGt3THhva2tnNEpRNUthbzBaMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\n  name: eks_tf-react\n\ncontexts:\n- context:\n    cluster: eks_tf-react\n    user: eks_tf-react\n  name: eks_tf-react\n\ncurrent-context: eks_tf-react\n\nusers:\n- name: eks_tf-react\n  user:\n    exec:\n      apiVersion: client.authentication.k8s.io/v1alpha1\n      command: aws-iam-authenticator\n      args:\n        - \"token\"\n        - \"-i\"\n        - \"tf-react\"\n\n\n",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "./kubeconfig_tf-react",
            "id": "9c4b76ab8be787ae9d3106fff70ba6d07e3d7b3b",
            "sensitive_content": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.cluster",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "null_resource",
      "name": "update_config_map_aws_auth",
      "each": "list",
      "provider": "provider.null",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "5134462583672144026",
            "triggers": {
              "config_map_rendered": "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: aws-auth\n  namespace: kube-system\ndata:\n  mapRoles: |\n    - rolearn: arn:aws:iam::053732050045:role/tf-react2020012908055537650000000a\n      username: system:node:{{EC2PrivateDNSName}}\n      groups:\n        - system:bootstrappers\n        - system:nodes\n\n  \n  \n  \n",
              "endpoint": "https://348939D1307D3B404636B9C175411842.gr7.us-east-1.eks.amazonaws.com",
              "kube_config_map_rendered": "apiVersion: v1\npreferences: {}\nkind: Config\n\nclusters:\n- cluster:\n    server: https://348939D1307D3B404636B9C175411842.gr7.us-east-1.eks.amazonaws.com\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJd01ERXlPVEE0TURNME9Gb1hEVE13TURFeU5qQTRNRE0wT0Zvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTVZoCjFwdXFraFBCUTBEa3R3ejNxeW9tb2hOVDl2cjlTQWxUajVKRE5EMThpV0lDOTZPcTQyOVhXZG9OVnBidzJwcXYKMzZjMlg0Yms5VENJcDkyS2d4WG55S2hoSmxNdEFLeGQ3d1VVMHRiNnlmOGN1NldTUlZSUEYwTEdVQVhxWUJlTwpsTnAvUnZFeFJUUGdpdXU2R3dvemtwakNVOTFvV2NIak1rMzc1OHlhWElFTjFnT2s3eTV6TjFqcW5UU2RJREFVCjFsNzdONk1qS29XTEJNRGVRTnRwUmJ2OWVRcisvVWJETGpCeVU0QVQ0cHZYYy9nTUJCN2tPcmd1ZENJUXlRZVIKSWRFUkxPNy9xVTVJRDFlNTUrVHpTZk1zQWpEV2NVaUFVUG41NjBvOXMrRnlBSUZpSlovV1A3R1dDOUUxVVFuNwo1Z0JTbHNJZE5MS2w3T3ltbm9VQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFDcjlXeXZ4T0lHMDZyejMzUFVKUHF3d0NTZmkKWk4wVU9NVFdQSzEvUm9MRkpveWZxZXNkaHFqL09MRTY4Rk92bzRhYjAvb1VCdHYzVHJvVUM3OWgveWxLblNMTQpFOTIxSm0zNXNwVndXSVlSbERXTXVvNXZ4R0k4ZXk3OTRtZFo1ckhZOTlDRG1OcXhicjRVUG9INHNYK3J4WlRlCnJZMzY5OWZ3RzBHaThaV05Uc2FJRXdMdjgyekJRN2w0Vlp0RGo4V2E2NUg0ZVpHRWpnbkt6U0VpSzBTOWVjUG4KWG9WU1FFUm01aHZGN0RCM3I0bzNqNnhmY0ErZXozQU8wd3BWMm43ejZvRkowZThkQUk1ejBPUkhrUkhodVFuZgpZcFlXUWt4a2taM052am9TWnU5MEJLRU5VUmMzTVlBTnIreFBOejl1UGt3THhva2tnNEpRNUthbzBaMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\n  name: eks_tf-react\n\ncontexts:\n- context:\n    cluster: eks_tf-react\n    user: eks_tf-react\n  name: eks_tf-react\n\ncurrent-context: eks_tf-react\n\nusers:\n- name: eks_tf-react\n  user:\n    exec:\n      apiVersion: client.authentication.k8s.io/v1alpha1\n      command: aws-iam-authenticator\n      args:\n        - \"token\"\n        - \"-i\"\n        - \"tf-react\"\n\n\n"
            }
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_security_group.worker-nodes",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_security_group.cluster",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "random_pet",
      "name": "workers",
      "each": "list",
      "provider": "provider.random",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "magnetic-kiwi",
            "keepers": {
              "lc_name": "tf-react-tf-react-worker-nodes20200129080610398400000013"
            },
            "length": 2,
            "prefix": null,
            "separator": "-"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_security_group.worker-nodes",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_instance_profile.workers",
            "module.eks.aws_iam_role.cluster",
            "module.eks.aws_iam_role.workers",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.eks.aws_launch_configuration.workers",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.workers",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "random_pet",
      "name": "workers_launch_template",
      "each": "list",
      "provider": "provider.random",
      "instances": []
    }
  ]
}
